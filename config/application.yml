# Flag to check, that you have not fogot to create (rename) config
#
configured: true


# Applications
#
applications:
  - nodeca.core
  - nodeca.users
  - nodeca.forum
  - nodeca.blogs
  - nodeca.clubs
  - nodeca.market
  - nodeca.search
  - nodeca.nntp


# Default application environment (can be used instead of NODECA_ENV, to change default)
#
# env_default: development


# List of enabled locales (all found locales by default)
#
locales:
  - en-US
  - ru-RU


# Security settings (currently - policy headers)
#
#security:
  # We can't use 'self' in 'connect-src' because WebSocket require to use
  # domain name with protocol. You can specify more precise rule if needed
  #
  # connect-src 'self' wss://yourdomain.com https://*.google-analytics.com https://*.google.com;
  #
  # 'data:' & 'blob:' needed to load avatars & create webworkers from string.
  #
  # !!! Safary allows http only, if protocol not defined.
  #
  #Content-Security-Policy: >
  #  default-src *;
  #  style-src 'unsafe-inline' *;
  #  img-src * data: blob:;
  #  child-src * data: blob:;
  #  script-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob: https://*.google-analytics.com https://*.google.com https://www.gstatic.com;
  #  connect-src *;
  #X-Frame-Options: DENY


# robots.txt custom content
#
#robots: |
#  User-Agent: *
#  #


# Options - different kind of constants, to keep root space clear
# keep commented of no subkeys set. In other case it will be `null`,
# and can override values from other files.
#
#options:

  # Recaptcha keys. Define your own. Current keys are for example/testing only
  # and should NOT be used on real sites.
  #
  #recaptcha:
  #  private_key: 6LfzAQ8TAAAAAEyWHFSR79_h0EWKsPYL_ONuw28l
  #  public_key: 6LfzAQ8TAAAAADVb8lwai8emdLWZnIu7X2jMbFHh

  # # Cache location for differend needs (styles compiler, mincer, ...),
  # # anyone can create additional subfolders there.
  # # Path is relative to main app's root. By default - './.cache'
  # #
  # cache_dir: ./.cache

  # # Layout header injection
  # inject_headers:
  #   - |
  #     <script>
  #       (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  #       (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  #       m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  #       })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
  #
  #       ga('create', 'UA-26895916-2', 'nodeca.com');
  #       ga('send', 'pageview');
  #     </script>


# Listening options
#
bind:
  default:
    #
    # Set 127.0.0.1:3000 on production for security
    #
    listen: 0.0.0.0:3000
    #
    # Enable on production, when behind proxy frontend.
    # Set `X-Real-IP` & `X-Forwarded-Scheme` for proper proxy pass & logs.
    #
    #forwarded: true
    #
    # Add for https-only, behind frontend:
    #
    #mount: https://your.domain.com
    #
    # Not recommended to use. Setup SSL proxy frontend instead.
    #
    #ssl:
    #  listen: 0.0.0.0:3001
    #  key:  ./config/examples/ssl.key
    #  cert: ./config/examples/ssl.crt

  # SYNOPSIS:
  #
  # <apiPath>:
  #   mount: [<proto>:][//[<host>][:<port>]][/<path>]
  #   listen: <address>[:<port = 80>]
  #   forwarded: [true]           # Set true if service runs after proxy frontend
  #                               # to override request url & IP.
  #   ssl:
  #     key:  /path/to/file.key   # Path might be absolute
  #     cert: /path/to/file.cert  # or relative to the main app
  #
  # SSL EXAMPLE:
  #
  # default:
  #   listen: 0.0.0.0:3000
  #   mount:  https://localhost:3000
  #   ssl:
  #     key:  ./etc/server.key
  #     cert: ./etc/server.cert
  #
  forum:
    mount: /forum

  forum.index:
    mount: /


# Amount of child processes to spawn in cluster.
# "auto" means it equals to the number of CPU cores;
# 0 means don't use cluster at all.
#
#fork:
#  www: auto
#  qlight: 2
#  qhard: auto
#  nntp: 1


# Path to REPL socket
#
# You can connect to it using `socat ./nodeca.sock stdin`
# or `nc -U ./nodeca.sock` (netcat-openbsd package)
#
#repl: ./repl.sock


#
# Email configs
#
email:

  # outgoing email
  #
  from: noreply@example.com

  # mail transport options:
  #
  # - "sendmail" - use sendmail transport
  # - "dummy"    - for debug, log content to `mailer.dummy` namespace
  #
  # Other:
  #
  # - "smtps://user%40gmail.com:pass@smtp.gmail.com"
  # - "direct:?name=hostname"
  #
  # see http://nodemailer.com/2-0-0-beta/migration-from-1-0-to-2-0/ for
  # description of possible string formats
  #
  transport: sendmail
